/////////////////////////////////////////////////////////////////////////////
//
// @file MemberFunctionTraits.hpp
//
// Declaration file for Class MemberFunctionTraits
//
// @author Brandon Kohn
//
// &copy 04-02-2012, Legion Ltd.
//! NOTE: This file is AUTOMATICALLY GENERATED. DO NOT EDIT DIRECTLY
//! OR YOUR CHANGES WILL BE LOST THE NEXT TIME THIS FILE IS GENERATED.
//
// All rights are reserved. Reproduction in whole or part is prohibited
// without the written consent of the copyright owner.
//
/////////////////////////////////////////////////////////////////////////////
namespace Legion { namespace Utility {
    struct MemberFunctionTraits
    {
        template <typename Signature>
        struct result;
        template < typename RT , typename T > struct result<MemberFunctionTraits(T*,RT(T::*)()) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(); typedef typename boost::mpl::identity < RT() >::type SignatureType; typedef RT ReturnType; };
        template < typename RT , typename T , typename A0 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0); typedef typename boost::mpl::identity < RT(A0) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; };
        template < typename RT , typename T , typename A0 , typename A1 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1); typedef typename boost::mpl::identity < RT(A0 , A1) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2); typedef typename boost::mpl::identity < RT(A0 , A1 , A2) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4 , A5)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4 , A5); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4 , A5) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; typedef A5 Arg5Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4 , A5 , A6)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4 , A5 , A6); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4 , A5 , A6) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; typedef A5 Arg5Type; typedef A6 Arg6Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; typedef A5 Arg5Type; typedef A6 Arg6Type; typedef A7 Arg7Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; typedef A5 Arg5Type; typedef A6 Arg6Type; typedef A7 Arg7Type; typedef A8 Arg8Type; };
        template < typename RT , typename T , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 > struct result<MemberFunctionTraits(T*,RT(T::*)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)) > { typedef T* ClassType; typedef RT(T::*MemFnPtr)(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9); typedef typename boost::mpl::identity < RT(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9) >::type SignatureType; typedef RT ReturnType; typedef A0 Arg0Type; typedef A1 Arg1Type; typedef A2 Arg2Type; typedef A3 Arg3Type; typedef A4 Arg4Type; typedef A5 Arg5Type; typedef A6 Arg6Type; typedef A7 Arg7Type; typedef A8 Arg8Type; typedef A9 Arg9Type; };
    };
            
}}
